// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Printf = require("bs-platform/lib/js/printf.js");

function layout(titleOpt, livereloadOpt, contents) {
  var title = titleOpt !== undefined ? titleOpt : "Page";
  var livereload = livereloadOpt !== undefined ? livereloadOpt : false;
  var livereload_script = livereload ? "<script>\n        fetch('//localhost:45678/wait')\n          .then(() => window.location.reload())\n      </script>" : "";
  return Curry._3(Printf.sprintf(/* Format */[
                  /* String_literal */Block.__(11, [
                      "\n    <html>\n      <head>\n        <title>",
                      /* String */Block.__(2, [
                          /* No_padding */0,
                          /* String_literal */Block.__(11, [
                              "</title>\n        <link rel=\"stylesheet\" href=\"https://unpkg.com/98.css\">\n        <style>\n          body { margin: 0; padding: 0; }\n        </style>\n      </head>\n      <body>",
                              /* String */Block.__(2, [
                                  /* No_padding */0,
                                  /* Char_literal */Block.__(12, [
                                      /* " " */32,
                                      /* String */Block.__(2, [
                                          /* No_padding */0,
                                          /* String_literal */Block.__(11, [
                                              "</body>\n    </html>\n  ",
                                              /* End_of_format */0
                                            ])
                                        ])
                                    ])
                                ])
                            ])
                        ])
                    ]),
                  "\n    <html>\n      <head>\n        <title>%s</title>\n        <link rel=\"stylesheet\" href=\"https://unpkg.com/98.css\">\n        <style>\n          body { margin: 0; padding: 0; }\n        </style>\n      </head>\n      <body>%s %s</body>\n    </html>\n  "
                ]), title, contents, livereload_script);
}

function center(contents) {
  return Curry._1(Printf.sprintf(/* Format */[
                  /* String_literal */Block.__(11, [
                      "<div style=\"\n            height: 100vh;\n            display: flex;\n            align-items: center;\n            justify-content: center\"\n    >",
                      /* String */Block.__(2, [
                          /* No_padding */0,
                          /* String_literal */Block.__(11, [
                              "</div>",
                              /* End_of_format */0
                            ])
                        ])
                    ]),
                  "<div style=\"\n            height: 100vh;\n            display: flex;\n            align-items: center;\n            justify-content: center\"\n    >%s</div>"
                ]), contents);
}

function $$window(titleOpt, body) {
  var title = titleOpt !== undefined ? titleOpt : "New window";
  return Curry._2(Printf.sprintf(/* Format */[
                  /* String_literal */Block.__(11, [
                      "<div class=\"window\">\n      <div class=\"title-bar\">\n        <div class=\"title-bar-text\">",
                      /* String */Block.__(2, [
                          /* No_padding */0,
                          /* String_literal */Block.__(11, [
                              "</div>\n        <div class=\"title-bar-controls\">\n          <button aria-label=\"Minimize\"></button>\n          <button aria-label=\"Maximize\"></button>\n          <button aria-label=\"Close\"></button>\n        </div>\n      </div>\n      <div class=\"window-body\">",
                              /* String */Block.__(2, [
                                  /* No_padding */0,
                                  /* String_literal */Block.__(11, [
                                      "</div>\n    </div>",
                                      /* End_of_format */0
                                    ])
                                ])
                            ])
                        ])
                    ]),
                  "<div class=\"window\">\n      <div class=\"title-bar\">\n        <div class=\"title-bar-text\">%s</div>\n        <div class=\"title-bar-controls\">\n          <button aria-label=\"Minimize\"></button>\n          <button aria-label=\"Maximize\"></button>\n          <button aria-label=\"Close\"></button>\n        </div>\n      </div>\n      <div class=\"window-body\">%s</div>\n    </div>"
                ]), title, body);
}

function row(alignOpt, body) {
  var align = alignOpt !== undefined ? alignOpt : "left";
  var style = align === "right" ? "style=\"justify-content: flex-end\"" : "";
  return Curry._2(Printf.sprintf(/* Format */[
                  /* String_literal */Block.__(11, [
                      "<section class=\"field-row\" ",
                      /* String */Block.__(2, [
                          /* No_padding */0,
                          /* String_literal */Block.__(11, [
                              ">\n      ",
                              /* String */Block.__(2, [
                                  /* No_padding */0,
                                  /* String_literal */Block.__(11, [
                                      "\n    </section>",
                                      /* End_of_format */0
                                    ])
                                ])
                            ])
                        ])
                    ]),
                  "<section class=\"field-row\" %s>\n      %s\n    </section>"
                ]), style, body);
}

function p(contents) {
  return Curry._1(Printf.sprintf(/* Format */[
                  /* String_literal */Block.__(11, [
                      "<p>",
                      /* String */Block.__(2, [
                          /* No_padding */0,
                          /* String_literal */Block.__(11, [
                              "</p>",
                              /* End_of_format */0
                            ])
                        ])
                    ]),
                  "<p>%s</p>"
                ]), contents);
}

function button(contents) {
  return Curry._1(Printf.sprintf(/* Format */[
                  /* String_literal */Block.__(11, [
                      "<button>",
                      /* String */Block.__(2, [
                          /* No_padding */0,
                          /* String_literal */Block.__(11, [
                              "</button>",
                              /* End_of_format */0
                            ])
                        ])
                    ]),
                  "<button>%s</button>"
                ]), contents);
}

exports.layout = layout;
exports.center = center;
exports.$$window = $$window;
exports.row = row;
exports.p = p;
exports.button = button;
/* No side effect */
